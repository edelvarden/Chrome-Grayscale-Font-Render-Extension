name: Release

on:
  workflow_dispatch: {}
  push:
    branches: [main]
    paths:
      - "package.json" # Trigger workflow on changes in package.json
      
jobs:
  build:
    permissions:
      contents: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Before build command
        run: pnpm fmt

      - name: Build the extension
        run: pnpm build
        continue-on-error: false

      - name: Install web-ext globally
        run: |
          pnpm install -g web-ext

      - name: Pack extension with web-ext
        run: |
          web-ext build --source-dir=build --artifacts-dir=build

      - name: Read version from package.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create version tag
        run: |
          TAG_NAME="v${{ env.VERSION }}"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          git tag $TAG_NAME
          git push origin $TAG_NAME

      - name: Create and Publish Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: ${{ env.TAG_NAME }}
          files: |
            build/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
